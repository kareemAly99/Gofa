from launch import LaunchDescription
from launch_ros.actions import Node
import os

def generate_launch_description():
    # Full GoFa robot URDF (existing file in ifpt_gofa)
    gofa_urdf = os.path.join(
        os.getenv('HOME'),
        'gofa_ws',
        'src',
        'ifpt_gofa',
        'urdf',
        'gofa_with_carrier.urdf'
    )

    # Carrier URDF (your custom carrier)
    carrier_urdf = os.path.join(
        os.getenv('HOME'),
        'gofa_ws',
        'src',
        'gofa_viz',
        'urdf',
        'carrier.urdf'
    )

    # RViz config
    rviz_config_file = os.path.join(
        os.getenv('HOME'),
        'gofa_ws',
        'src',
        'gofa_viz',
        'config',
        'display.rviz'
    )

    return LaunchDescription([

        # Full GoFa robot publisher
        Node(
            package='robot_state_publisher',
            executable='robot_state_publisher',
            name='gofa_state_publisher',
            output='screen',
            parameters=[{'robot_description': open(gofa_urdf).read()}]
        ),

        # Carrier publisher (attached to panda_hand)
        Node(
            package='robot_state_publisher',
            executable='robot_state_publisher',
            name='carrier_state_publisher',
            output='screen',
            parameters=[{'robot_description': open(carrier_urdf).read()}]
        ),

        # Joint State Publisher GUI
        Node(
            package='joint_state_publisher_gui',
            executable='joint_state_publisher_gui',
            name='joint_state_publisher_gui',
            output='screen'
        ),

        # Add tanks node
        Node(
            package='gofa_viz',
            executable='add_tanks',
            name='add_tanks',
            output='screen'
        ),

        # RViz
        Node(
            package='rviz2',
            executable='rviz2',
            name='rviz2',
            output='screen',
            arguments=['-d', rviz_config_file]
        ),
    ])
